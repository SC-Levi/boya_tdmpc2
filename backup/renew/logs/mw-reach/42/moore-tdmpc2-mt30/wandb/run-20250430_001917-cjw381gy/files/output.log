[34m[1mLogs will be synced with wandb.
Config(env_type='MooreMultiTask', n_contexts=30, obs_dim=39, action_dim=4, hidden_dim=256, n_experts=4, moore_temperature=0.5, use_softmax=True, use_checkpoint=False, use_mixed_precision=True, gamma=0.99, stddev=0.1, actor_updates=4, use_ema=True, ensemble_size=5, update_freq=4, seed=42, model_updates=5, pi_updates=3, device=device(type='cuda', index=0), task='mw-reach', obs='state', multitask=False, steps=10000000, batch_size=256, reward_coef=0.1, value_coef=0.1, consistency_coef=10, rho=0.5, lr=0.0003, enc_lr_scale=0.3, grad_clip_norm=20, tau=0.01, discount_denom=5, discount_min=0.95, discount_max=0.995, buffer_size=1000000, exp_name='moore-tdmpc2-mt30', eval_freq=20000, eval_episodes=10, moore={'n_experts': 4, 'temperature': 0.5, 'use_softmax': True, 'debug_task_emb': False}, mpc=True, iterations=15, num_samples=512, num_elites=64, num_pi_trajs=24, horizon=7, min_std=0.05, max_std=2, temperature=0.5, log_std_min=-10, log_std_max=2, entropy_coef=0.0001, model_size=5, num_enc_layers=2, enc_dim=256, num_channels=32, mlp_dim=512, latent_dim=512, task_dim=0, num_q=5, dropout=0.01, simnorm_dim=8, num_bins=101, vmin=-10, vmax=10, wandb_project='moore-tdmpc2', wandb_entity='OA-MBRL', wandb_silent=False, enable_wandb=True, save_csv=True, save_video=False, save_agent=True, compile=False, compile_dynamics=False, compile_loss=False, work_dir=PosixPath('/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/logs/mw-reach/42/moore-tdmpc2-mt30'), task_title='Mw Reach', tasks=['mw-reach'], obs_shape={'state': (39,)}, episode_length=100, obs_shapes='???', episode_lengths='???', seed_steps=1000, bin_size=0.2, data_dir='/media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30')
Architecture: MooreWorldModel(total_params=5308978, latent_dim=512, action_dim=4, n_experts=4, temperature=0.5)
Task Encoder: MooreTaskEncoder(obs_dim=39, latent_dim=512, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True)
Transition-Reward Core: MoETransitionRewardModel(latent_dim=512, action_dim=4, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True, reward_dim=101, fused_head=True, use_mixed_precision=True)
Policy prior: Sequential(
  (0): Linear(in_features=512, out_features=256, bias=True)
  (1): ReLU()
  (2): Linear(in_features=256, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=8, bias=True)
)
Q-functions: Ensemble(n_models=5)
[32m[1må¼€å§‹Moore-TDMPC2è®­ç»ƒ...
[32mOnlineTrainer: Starting training loop with profiling enabled
[36mPROFILER STATUS: Enabled=True, Functions=0, Total Calls=0
[36mPROFILER: forward executed in 35.22ms (call 1)
[36mPROFILER: forward executed in 0.30ms (call 2)
[36mPROFILER: forward executed in 0.31ms (call 3)
=== é¦–æ¬¡ eval() é˜¶æ®µçƒ­ç‚¹å‡½æ•° ===
         20215182 function calls (17684111 primitive calls) in 33.828 seconds
   Ordered by: cumulative time
   List reduced from 2407 to 20 due to restriction <20>
   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.014    0.014   33.829   33.829 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/trainer/online_trainer.py:36(eval)
17000/1000    0.128    0.000   32.509    0.033 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_contextlib.py:113(decorate_context)
     1000    0.005    0.000   32.497    0.032 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py:422(act)
     1000    2.622    0.003   31.545    0.032 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py:365(plan)
    15000    0.699    0.000   25.814    0.002 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py:299(estimate_value)
804000/107000    0.326    0.000   20.146    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py:1736(_wrapped_call_impl)
804000/107000    0.531    0.000   20.088    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py:1744(_call_impl)
    15000    0.068    0.000   11.618    0.001 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/world_model.py:706(core_vectorized)
    15000    0.107    0.000   11.076    0.001 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/world_model_core.py:162(core_vectorized)
    15000    1.088    0.000   10.539    0.001 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/world_model_core.py:110(forward)
   106000    0.289    0.000    9.879    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/container.py:248(forward)
    15000    0.120    0.000    8.866    0.001 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/world_model.py:482(Q)
   319000    0.204    0.000    7.616    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/linear.py:124(forward)
   319000    7.326    0.000    7.326    0.000 {built-in method torch._C._nn.linear}
    16000    0.073    0.000    3.664    0.000 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/layers.py:228(forward)
    62000    0.149    0.000    3.577    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/functional.py:210(einsum)
    62000    3.379    0.000    3.379    0.000 {built-in method torch.einsum}
    16000    0.598    0.000    2.442    0.000 /home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/world_model.py:312(policy)
   197000    0.062    0.000    1.710    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/activation.py:132(forward)
   197000    0.068    0.000    1.648    0.000 /home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/functional.py:1693(relu)
 [32meval[39m    [34mE:[39m 0            [34mI:[39m 0            [34mR:[39m 295.5        [34mS:[39m 0.0          [34mT:[39m 0:00:33
 [34mtrain[39m   [34mE:[39m 0            [34mI:[39m 100          [34mR:[39m 364.9        [34mS:[39m 0.0          [34mT:[39m 0:00:33
Buffer capacity: 1,000,000
Storage required: 0.18 GB
Using CUDA:0 memory for storage.
 [34mtrain[39m   [34mE:[39m 1            [34mI:[39m 200          [34mR:[39m 315.7        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 2            [34mI:[39m 300          [34mR:[39m 605.1        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 3            [34mI:[39m 400          [34mR:[39m 347.1        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 4            [34mI:[39m 500          [34mR:[39m 319.2        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 5            [34mI:[39m 600          [34mR:[39m 274.8        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 6            [34mI:[39m 700          [34mR:[39m 276.7        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 7            [34mI:[39m 800          [34mR:[39m 190.2        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 8            [34mI:[39m 900          [34mR:[39m 547.0        [34mS:[39m 0.0          [34mT:[39m 0:00:34
 [34mtrain[39m   [34mE:[39m 9            [34mI:[39m 1,000        [34mR:[39m 361.1        [34mS:[39m 0.0          [34mT:[39m 0:00:34
Pretraining agent on seed data...
 [34mtrain[39m   [34mE:[39m 10           [34mI:[39m 1,100        [34mR:[39m 91.9         [34mS:[39m 0.0          [34mT:[39m 0:08:41
 [34mtrain[39m   [34mE:[39m 11           [34mI:[39m 1,200        [34mR:[39m 53.3         [34mS:[39m 0.0          [34mT:[39m 0:09:28
 [34mtrain[39m   [34mE:[39m 12           [34mI:[39m 1,300        [34mR:[39m 42.4         [34mS:[39m 0.0          [34mT:[39m 0:10:16
 [34mtrain[39m   [34mE:[39m 13           [34mI:[39m 1,400        [34mR:[39m 56.9         [34mS:[39m 0.0          [34mT:[39m 0:11:04
 [34mtrain[39m   [34mE:[39m 14           [34mI:[39m 1,500        [34mR:[39m 43.9         [34mS:[39m 0.0          [34mT:[39m 0:11:52
 [34mtrain[39m   [34mE:[39m 15           [34mI:[39m 1,600        [34mR:[39m 45.0         [34mS:[39m 0.0          [34mT:[39m 0:12:41
Traceback (most recent call last):
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_with_cprofile.py", line 175, in <module>
    train()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_with_cprofile.py", line 162, in train
    trainer.train()
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/trainer/online_trainer.py", line 126, in train
    _train_metrics = self.agent.update(self.buffer)
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py", line 594, in update
    stats_model = self.update_model(obs, action, reward, task)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/eval_frame.py", line 721, in _fn
    return fn(*args, **kwargs)
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py", line 648, in update_model
    total_loss.backward()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_tensor.py", line 624, in backward
    torch.autograd.backward(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt