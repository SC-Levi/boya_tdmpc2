[34m[1mLogs will be synced with wandb.
Config(env_type='MooreMultiTask', n_contexts=1, obs_dim=17, action_dim=6, hidden_dim=256, n_experts=4, moore_temperature=1.0, use_softmax=True, use_checkpoint=True, use_mixed_precision=True, gamma=0.99, stddev=0.1, actor_updates=1, use_ema=True, ensemble_size=5, update_freq=2, seed=42, device=device(type='cuda', index=0), task='cheetah-run', obs='state', multitask=False, steps=10000, batch_size=256, reward_coef=0.1, value_coef=0.1, consistency_coef=20, rho=0.5, lr=0.0003, enc_lr_scale=0.3, grad_clip_norm=20, tau=0.01, discount_denom=5, discount_min=0.95, discount_max=0.995, buffer_size=100000, exp_name='moore-tdmpc2-mt30', eval_freq=50000, eval_episodes=10, moore={'n_experts': 4, 'temperature': 1.0, 'use_softmax': True, 'debug_task_emb': False}, mpc=True, iterations=6, num_samples=512, num_elites=64, num_pi_trajs=24, horizon=3, min_std=0.05, max_std=2, temperature=0.5, log_std_min=-10, log_std_max=2, entropy_coef=0.0001, model_size=5, num_enc_layers=2, enc_dim=256, num_channels=32, mlp_dim=512, latent_dim=512, task_dim=0, num_q=5, dropout=0.01, simnorm_dim=8, num_bins=101, vmin=-10, vmax=10, wandb_project='moore-tdmpc2', wandb_entity='OA-MBRL', wandb_silent=False, enable_wandb=True, save_csv=True, save_video=False, save_agent=True, compile=False, work_dir=PosixPath('/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/logs/cheetah-run/42/moore-tdmpc2-mt30'), task_title='Cheetah Run', tasks=['cheetah-run'], obs_shape={'state': (17,)}, episode_length=500, obs_shapes='???', episode_lengths='???', seed_steps=2500, bin_size=0.2, data_dir='/media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30')
Architecture: TD-MPC2 Moore World Model
Task Encoder: MooreTaskEncoder(obs_dim=17, latent_dim=512, hidden_dim=256, n_experts=4, temperature=1.0, use_softmax=True)
Dynamics: MoEDynamicsModel(latent_dim=512, action_dim=6, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True)
Reward: MoERewardModel(latent_dim=512, action_dim=6, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True, reward_dim=101, top_k=1)
Policy prior: Sequential(
  (0): Linear(in_features=512, out_features=256, bias=True)
  (1): ReLU()
  (2): Linear(in_features=256, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=12, bias=True)
)
Q-functions: Ensemble(n_models=5)
Learnable parameters: 5,991,369
[32m[1må¼€å§‹Moore-TDMPC2è®­ç»ƒ...
[36mPROFILER STATUS: Enabled=True, Functions=3, Total Calls=7
[32mOnlineTrainer: Starting training loop with profiling enabled
[36mPROFILER STATUS: Enabled=True, Functions=3, Total Calls=7
[36mPROFILER: forward executed in 3.62ms (call 3)
 [32meval[39m    [34mE:[39m 0            [34mI:[39m 0            [34mR:[39m 0.8          [34mS:[39m 0.0          [34mT:[39m 0:00:09
 [34mtrain[39m   [34mE:[39m 0            [34mI:[39m 500          [34mR:[39m 11.3         [34mS:[39m 0.0          [34mT:[39m 0:00:09
Buffer capacity: 10,000
Storage required: 0.00 GB
Using CUDA:0 memory for storage.
 [34mtrain[39m   [34mE:[39m 1            [34mI:[39m 1,000        [34mR:[39m 7.9          [34mS:[39m 0.0          [34mT:[39m 0:00:09
 [34mtrain[39m   [34mE:[39m 2            [34mI:[39m 1,500        [34mR:[39m 9.3          [34mS:[39m 0.0          [34mT:[39m 0:00:09
 [34mtrain[39m   [34mE:[39m 3            [34mI:[39m 2,000        [34mR:[39m 13.4         [34mS:[39m 0.0          [34mT:[39m 0:00:09
 [34mtrain[39m   [34mE:[39m 4            [34mI:[39m 2,500        [34mR:[39m 4.9          [34mS:[39m 0.0          [34mT:[39m 0:00:09
Pretraining agent on seed data...
[TIME] encode:  605.53 ms
[DEBUG] Aligned batch size to 255 (next_v_c vs reward)
[TIME] td_target:  606.47 ms
Error executing job with overrides: ['task=cheetah-run', 'steps=10000']
Traceback (most recent call last):
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore.py", line 106, in train
    trainer.train()
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/TDMPC2/algorithms/trainer/online_trainer.py", line 126, in train
    _train_metrics = self.agent.update(self.buffer)
  File "/home/levi/Documents/MOORE-TDMPC/TDMPC2/algorithms/tdmpc2.py", line 329, in update
    return self._update(obs, action, reward, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/timer.py", line 94, in wrapper
    result = f(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py", line 707, in _update
    next_seq, expert_weights_seq = self.model.dynamics_vectorized(z0, action_seq)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/eval_frame.py", line 556, in _fn
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/external_utils.py", line 31, in inner
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/world_model.py", line 657, in dynamics_vectorized
    return self.dynamics_step_vectorized(z_seq, a_seq)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/world_model.py", line 624, in dynamics_step_vectorized
    flat_next, flat_w = self._dynamics(flat_z, flat_a)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1740, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/moe_dynamics.py", line 148, in forward
    return self.dynamics_forward(z, a, use_softmax=use_softmax)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 27, in wrapper
    start_time = time.time()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 1395, in __call__
    return self._torchdynamo_orig_callable(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 1180, in __call__
    result = self._inner_convert(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 545, in __call__
    return _compile(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 977, in _compile
    guarded_code = compile_inner(code, one_graph, hooks, transform)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 706, in compile_inner
    return _compile_inner(code, one_graph, hooks, transform)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_utils_internal.py", line 95, in wrapper_function
    return function(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 741, in _compile_inner
    out_code = transform_code_object(code, transform)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/bytecode_transformation.py", line 1348, in transform_code_object
    transformations(instructions, code_options)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 229, in _fn
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 658, in transform
    tracer.run()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 2912, in run
    super().run()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1120, in run
    while self.step():
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1032, in step
    self.dispatch_table[inst.opcode](self, inst)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 640, in wrapper
    return inner_fn(self, inst)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1816, in CALL_FUNCTION_EX
    self.call_function(fn, argsvars.items, kwargsvars)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 967, in call_function
    self.push(fn.call_function(self, args, kwargs))  # type: ignore[arg-type]
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/lazy.py", line 170, in realize_and_forward
    return getattr(self.realize(), name)(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/functions.py", line 349, in call_function
    return super().call_function(tx, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/functions.py", line 125, in call_function
    return tx.inline_user_function_return(self, [*self.self_args(), *args], kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 973, in inline_user_function_return
    return InliningInstructionTranslator.inline_call(self, fn, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 3127, in inline_call
    return cls.inline_call_(parent, func, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 3255, in inline_call_
    tracer.run()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1120, in run
    while self.step():
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1032, in step
    self.dispatch_table[inst.opcode](self, inst)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 640, in wrapper
    return inner_fn(self, inst)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1828, in CALL_FUNCTION_KW
    self.call_function(fn, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 967, in call_function
    self.push(fn.call_function(self, args, kwargs))  # type: ignore[arg-type]
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/torch.py", line 953, in call_function
    tensor_variable = wrap_fx_proxy(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/builder.py", line 2108, in wrap_fx_proxy
    return wrap_fx_proxy_cls(target_cls=TensorVariable, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/builder.py", line 2174, in wrap_fx_proxy_cls
    return _wrap_fx_proxy(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/builder.py", line 2270, in _wrap_fx_proxy
    example_value = get_fake_value(proxy.node, tx, allow_non_graph_fake=True)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2278, in get_fake_value
    raise TorchRuntimeError(str(e)).with_traceback(e.__traceback__) from None
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2213, in get_fake_value
    ret_val = wrap_fake_exception(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 1761, in wrap_fake_exception
    return fn()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2214, in <lambda>
    lambda: run_node(tx.output, node, args, kwargs, nnmodule)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2346, in run_node
    raise RuntimeError(make_error_message(e)).with_traceback(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2328, in run_node
    return node.target(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_stats.py", line 21, in wrapper
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1271, in __torch_dispatch__
    return self.dispatch(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1813, in dispatch
    return self._cached_dispatch_impl(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1381, in _cached_dispatch_impl
    output = self._dispatch_impl(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 2203, in _dispatch_impl
    decomposition_table[func](*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_prims_common/wrappers.py", line 291, in _fn
    result = fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_prims_common/wrappers.py", line 143, in _fn
    result = fn(**bound.arguments)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_refs/__init__.py", line 2847, in cat
    return prims.cat(filtered, dim).clone(memory_format=memory_format)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_ops.py", line 723, in __call__
    return self._op(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_stats.py", line 21, in wrapper
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1271, in __torch_dispatch__
    return self.dispatch(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1813, in dispatch
    return self._cached_dispatch_impl(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1381, in _cached_dispatch_impl
    output = self._dispatch_impl(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 2225, in _dispatch_impl
    func.prim_meta_impl(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_prims/__init__.py", line 1783, in _cat_meta
    torch._check(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/__init__.py", line 1617, in _check
    _check_with(RuntimeError, cond, message)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/__init__.py", line 1599, in _check_with
    raise error_type(message_evaluated)
torch._dynamo.exc.TorchRuntimeError: Failed running call_function <built-in method cat of type object at 0x7f904bed16a0>(*([FakeTensor(..., device='cuda:0', size=(s2, s3)), FakeTensor(..., device='cuda:0', size=(s0, s1))],), **{'dim': -1}):
Sizes of tensors must match except in dimension 1. Expected s2 but got s0 for tensor number 1 in the list
from user code:
   File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in torch_dynamo_resume_in_wrapper_at_27
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/moe_dynamics.py", line 80, in dynamics_forward
    z_a = torch.cat([z, a], dim=-1)
Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information
You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.