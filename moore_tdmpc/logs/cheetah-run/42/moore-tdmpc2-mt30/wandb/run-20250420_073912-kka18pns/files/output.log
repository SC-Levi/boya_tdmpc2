[34m[1mLogs will be synced with wandb.
Config(env_type='MooreMultiTask', n_contexts=1, obs_dim=17, action_dim=6, hidden_dim=256, n_experts=4, moore_temperature=1.0, use_softmax=True, gamma=0.99, stddev=0.1, actor_updates=1, use_ema=True, ensemble_size=5, update_freq=2, seed=42, device=device(type='cuda', index=0), task='cheetah-run', obs='state', multitask=False, steps=10000, batch_size=256, reward_coef=0.1, value_coef=0.1, consistency_coef=20, rho=0.5, lr=0.0003, enc_lr_scale=0.3, grad_clip_norm=20, tau=0.01, discount_denom=5, discount_min=0.95, discount_max=0.995, buffer_size=100000, exp_name='moore-tdmpc2-mt30', eval_freq=50000, eval_episodes=10, moore={'n_experts': 4, 'temperature': 1.0, 'use_softmax': True, 'debug_task_emb': False}, mpc=True, iterations=6, num_samples=512, num_elites=64, num_pi_trajs=24, horizon=3, min_std=0.05, max_std=2, temperature=0.5, log_std_min=-10, log_std_max=2, entropy_coef=0.0001, model_size=5, num_enc_layers=2, enc_dim=256, num_channels=32, mlp_dim=512, latent_dim=512, task_dim=0, num_q=5, dropout=0.01, simnorm_dim=8, num_bins=101, vmin=-10, vmax=10, wandb_project='moore-tdmpc2', wandb_entity='OA-MBRL', wandb_silent=False, enable_wandb=True, save_csv=True, save_video=False, save_agent=True, compile=False, work_dir=PosixPath('/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/logs/cheetah-run/42/moore-tdmpc2-mt30'), task_title='Cheetah Run', tasks=['cheetah-run'], obs_shape={'state': (17,)}, episode_length=500, obs_shapes='???', episode_lengths='???', seed_steps=2500, bin_size=0.2, data_dir='/media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30')
Architecture: TD-MPC2 Moore World Model
Task Encoder: MooreTaskEncoder(obs_dim=17, latent_dim=512, hidden_dim=256, n_experts=4, temperature=1.0, use_softmax=True)
Dynamics: MoEDynamicsModel(latent_dim=512, action_dim=6, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True)
Reward: MoERewardModel(latent_dim=512, action_dim=6, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True, reward_dim=101)
Policy prior: Sequential(
  (0): Linear(in_features=512, out_features=256, bias=True)
  (1): ReLU()
  (2): Linear(in_features=256, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=12, bias=True)
)
Q-functions: Ensemble(n_models=5)
Learnable parameters: 5,991,369
[32m[1må¼€å§‹Moore-TDMPC2è®­ç»ƒ...
[36mPROFILER STATUS: Enabled=True, Functions=2, Total Calls=6
[32mOnlineTrainer: Starting training loop with profiling enabled
[36mPROFILER STATUS: Enabled=True, Functions=2, Total Calls=6
[36mPROFILER: forward executed in 3.03ms (call 3)
 [32meval[39m    [34mE:[39m 0            [34mI:[39m 0            [34mR:[39m 0.8          [34mS:[39m 0.0          [34mT:[39m 0:00:07
 [34mtrain[39m   [34mE:[39m 0            [34mI:[39m 500          [34mR:[39m 5.0          [34mS:[39m 0.0          [34mT:[39m 0:00:07
Buffer capacity: 10,000
Storage required: 0.00 GB
Using CUDA:0 memory for storage.
 [34mtrain[39m   [34mE:[39m 1            [34mI:[39m 1,000        [34mR:[39m 6.6          [34mS:[39m 0.0          [34mT:[39m 0:00:07
 [34mtrain[39m   [34mE:[39m 2            [34mI:[39m 1,500        [34mR:[39m 11.7         [34mS:[39m 0.0          [34mT:[39m 0:00:07
 [34mtrain[39m   [34mE:[39m 3            [34mI:[39m 2,000        [34mR:[39m 8.3          [34mS:[39m 0.0          [34mT:[39m 0:00:07
 [34mtrain[39m   [34mE:[39m 4            [34mI:[39m 2,500        [34mR:[39m 5.6          [34mS:[39m 0.0          [34mT:[39m 0:00:07
Pretraining agent on seed data...
[TIME] encode(future):  442.37 ms
[TIME] compute TD targets:    1.38 ms
[TIME] encode(initial): 1545.76 ms
[TIME] rollout & consistency (vectorized):  473.39 ms
[TIME] reward preds: 4650.58 ms
[TIME] Q preds:    5.56 ms
[TIME] reward loss:    9.42 ms
[TIME] value loss:    2.48 ms
[TIME] loss computation:    0.17 ms
[TIME] backward: 4100.85 ms
[TIME] grad clipping:    7.28 ms
[TIME] optim.step:   27.58 ms
[TIME] _update total: 11268.68 ms
[36mPROFILER: _update executed in 11357.45ms (call 1)
[TIME] encode(future):  449.56 ms
[TIME] compute TD targets:    1.06 ms
[TIME] encode(initial): 1668.17 ms
[TIME] rollout & consistency (vectorized):  453.80 ms
[TIME] reward preds: 4755.77 ms
[TIME] Q preds:    5.54 ms
[TIME] reward loss:    2.10 ms
[TIME] value loss:    2.56 ms
[TIME] loss computation:    0.16 ms
[TIME] backward: 4085.39 ms
[TIME] grad clipping:    6.11 ms
[TIME] optim.step:    1.22 ms
[TIME] _update total: 11433.14 ms
[36mPROFILER: _update executed in 11519.64ms (call 2)
[TIME] encode(future):  503.99 ms
[TIME] compute TD targets:    1.13 ms
[TIME] encode(initial): 1648.23 ms
[TIME] rollout & consistency (vectorized):  467.83 ms
[TIME] reward preds: 4874.98 ms
[TIME] Q preds:    5.52 ms
[TIME] reward loss:    2.03 ms
[TIME] value loss:    2.77 ms
[TIME] loss computation:    0.16 ms
[TIME] backward: 4157.90 ms
[TIME] grad clipping:    7.10 ms
[TIME] optim.step:    1.68 ms
[TIME] _update total: 11675.63 ms
[36mPROFILER: _update executed in 11767.36ms (call 3)
[TIME] encode(future):  454.48 ms
[TIME] compute TD targets:    1.50 ms
[TIME] encode(initial): 1639.54 ms
[TIME] rollout & consistency (vectorized):  459.65 ms
[TIME] reward preds: 4687.24 ms
[TIME] Q preds:    5.40 ms
[TIME] reward loss:    2.12 ms
[TIME] value loss:    2.04 ms
[TIME] loss computation:    0.15 ms
[TIME] backward: 3863.72 ms
[TIME] grad clipping:    5.86 ms
[TIME] optim.step:    1.26 ms
[TIME] _update total: 11124.63 ms
[TIME] encode(future):  447.70 ms
[TIME] compute TD targets:    1.12 ms
Traceback (most recent call last):
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore.py", line 126, in <module>
    train()
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore.py", line 106, in train
    trainer.train()
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/TDMPC2/algorithms/trainer/online_trainer.py", line 126, in train
    _train_metrics = self.agent.update(self.buffer)
  File "/home/levi/Documents/MOORE-TDMPC/TDMPC2/algorithms/tdmpc2.py", line 329, in update
    return self._update(obs, action, reward, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/timer.py", line 94, in wrapper
    result = f(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py", line 684, in _update
    v_c = self.model.encode(obs[0], task)  # [batch_size, latent_dim]
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/world_model.py", line 237, in encode
    encoded = self.task_emb(obs, task_id=task)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/world_model.py", line 198, in task_emb
    v_c = self.task_encoder(features, task_id)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1740, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/task_encoder.py", line 158, in forward
    expert_feats = self.experts(flat_obs)              # [n_experts, N, latent]
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1740, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/layers.py", line 352, in forward
    orthogonalized_output[i, b] = (vi / vi_norm).clone()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/fx/traceback.py", line 83, in format_stack
    return traceback.format_list(traceback.extract_stack()[:-1])
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/traceback.py", line 211, in extract_stack
    stack = StackSummary.extract(walk_stack(f), limit=limit)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/traceback.py", line 347, in extract
    for f, lineno in frame_gen:
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/traceback.py", line 301, in walk_stack
    yield f, f.f_lineno
KeyboardInterrupt