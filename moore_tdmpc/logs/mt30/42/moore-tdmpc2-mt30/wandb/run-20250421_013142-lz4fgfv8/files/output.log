[34m[1mLogs will be synced with wandb.
Config(env_type='MooreMultiTask', n_contexts=30, obs_dim=24, action_dim=6, hidden_dim=256, n_experts=4, moore_temperature=1.0, use_softmax=True, use_checkpoint=True, use_mixed_precision=True, gamma=0.99, stddev=0.1, actor_updates=1, use_ema=True, ensemble_size=5, update_freq=2, seed=42, device=device(type='cuda', index=0), task='mt30', obs='state', multitask=True, steps=10000, batch_size=256, reward_coef=0.1, value_coef=0.1, consistency_coef=20, rho=0.5, lr=0.0003, enc_lr_scale=0.3, grad_clip_norm=20, tau=0.01, discount_denom=5, discount_min=0.95, discount_max=0.995, buffer_size=100000, exp_name='moore-tdmpc2-mt30', eval_freq=50000, eval_episodes=10, moore={'n_experts': 4, 'temperature': 1.0, 'use_softmax': True, 'debug_task_emb': False}, mpc=True, iterations=6, num_samples=512, num_elites=64, num_pi_trajs=24, horizon=3, min_std=0.05, max_std=2, temperature=0.5, log_std_min=-10, log_std_max=2, entropy_coef=0.0001, model_size=5, num_enc_layers=2, enc_dim=256, num_channels=32, mlp_dim=512, latent_dim=512, task_dim=64, num_q=5, dropout=0.01, simnorm_dim=8, num_bins=101, vmin=-10, vmax=10, wandb_project='moore-tdmpc2', wandb_entity='OA-MBRL', wandb_silent=False, enable_wandb=True, save_csv=True, save_video=False, save_agent=True, compile=False, work_dir=PosixPath('/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/logs/mt30/42/moore-tdmpc2-mt30'), task_title='MT30', tasks=['walker-stand', 'walker-walk', 'walker-run', 'cheetah-run', 'reacher-easy', 'reacher-hard', 'acrobot-swingup', 'pendulum-swingup', 'cartpole-balance', 'cartpole-balance-sparse', 'cartpole-swingup', 'cartpole-swingup-sparse', 'cup-catch', 'finger-spin', 'finger-turn-easy', 'finger-turn-hard', 'fish-swim', 'hopper-stand', 'hopper-hop', 'walker-walk-backwards', 'walker-run-backwards', 'cheetah-run-backwards', 'cheetah-run-front', 'cheetah-run-back', 'cheetah-jump', 'hopper-hop-backwards', 'reacher-three-easy', 'reacher-three-hard', 'cup-spin', 'pendulum-spin'], obs_shape={'state': (24,)}, episode_length=500, obs_shapes=[24, 24, 24, 17, 6, 6, 6, 3, 5, 5, 5, 5, 8, 9, 12, 12, 24, 15, 15, 24, 24, 17, 17, 17, 17, 15, 8, 8, 8, 3], episode_lengths=[500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500], seed_steps=2500, bin_size=0.2, data_dir='/media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30')
Architecture: TD-MPC2 Moore World Model
Moore config: experts=4, temperature=0.5, softmax=True
Task Encoder: MooreTaskEncoder(obs_dim=24, latent_dim=512, hidden_dim=256, n_experts=4, temperature=1.0, use_softmax=True)
Dynamics: MoEDynamicsModel(latent_dim=512, action_dim=6, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True)
Reward: MoERewardModel(latent_dim=512, action_dim=6, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True, reward_dim=101, top_k=1)
Policy prior: Sequential(
  (0): Linear(in_features=512, out_features=256, bias=True)
  (1): ReLU()
  (2): Linear(in_features=256, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=12, bias=True)
)
Q-functions: Ensemble(n_models=5)
Learnable parameters: 5,998,537
[32m[1må¼€å§‹Moore-TDMPC2è®­ç»ƒ...
[36mPROFILER STATUS: Enabled=True, Functions=3, Total Calls=7
[32mOfflineTrainer: Starting training with profiling enabled
[36mPROFILER STATUS: Enabled=True, Functions=3, Total Calls=7
Found 1 files in /media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30/*.pt
WARNING: expected 20 files for mt80, 4 for mt30, found 1.
Loading data:   0%|                                                                                               | 0/1 [00:00<?, ?it/s]
Buffer capacity: 345,690,000
Storage required: 47.01 GB
Using CPU memory for storage.
WARNING: buffer has 200000 eps, expected 690000.
[OfflineTrainer] Disabled TaskEncoder gradient checkpointing
Training agent for 10000 iterations...
[36mOfflineTrainer: Training iteration 0/10000
[36mPROFILER STATUS: Enabled=True, Functions=3, Total Calls=7
[DEBUG] åŽŸå§‹ shapes - obs: (4, 256, 24), action: (3, 256, 6), reward: (3, 256, 1)
[DEBUG] æ£€æµ‹åˆ° timeâ€‘first å¸ƒå±€ï¼Œå·²è½¬ç½®åˆ° batchâ€‘first
Loading data: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1/1 [00:03<00:00,  3.94s/it]
Error executing job with overrides: ['task=mt30', 'steps=10000', 'data_dir=/media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30']
Traceback (most recent call last):
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore.py", line 142, in train
    trainer.train()
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/TDMPC2/algorithms/trainer/offline_trainer.py", line 107, in train
    train_metrics = self.agent.update(self.buffer)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore.py", line 75, in _patched_update
    return self._update(obs, action, reward, task=task)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/timer.py", line 94, in wrapper
    result = f(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/train_moore_agent.py", line 705, in _update
    t_enc_obs = self.model.encode(obs, task)  # [B,H+1,D]
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/world_model.py", line 217, in encode
    v_c = self.task_encoder(obs, task)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1740, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Documents/MOORE-TDMPC/moore_tdmpc/task_encoder.py", line 187, in forward
    v_flat = (w.unsqueeze(-1) * expert_feats).sum(dim=1)  # [N, latent]
RuntimeError: The size of tensor a (65536) must match the size of tensor b (1024) at non-singleton dimension 0
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.