[34m[1mLogs will be synced with wandb.
Config(env_type='MooreMultiTask', n_contexts=10, obs_dim=39, action_dim=4, hidden_dim=256, n_experts=4, moore_temperature=1.0, use_softmax=True, use_checkpoint=False, use_mixed_precision=True, gamma=0.99, stddev=0.1, actor_updates=2, use_ema=True, ensemble_size=5, update_freq=2, seed=42, device=device(type='cuda', index=0), task='mw-hammer', obs='state', multitask=False, steps=10000000, batch_size=1024, reward_coef=0.1, value_coef=0.25, consistency_coef=20, rho=0.5, lr=0.0003, enc_lr_scale=0.3, grad_clip_norm=20, tau=0.01, discount_denom=5, discount_min=0.95, discount_max=0.995, buffer_size=100000, exp_name='moore-tdmpc2-mt30', eval_freq=5000, eval_episodes=10, moore={'n_experts': 4, 'temperature': 1.0, 'use_softmax': True, 'debug_task_emb': False}, mpc=True, iterations=4, num_samples=512, num_elites=64, num_pi_trajs=24, horizon=5, min_std=0.05, max_std=2, temperature=0.5, log_std_min=-10, log_std_max=2, entropy_coef=0.0001, model_size=5, num_enc_layers=2, enc_dim=256, num_channels=32, mlp_dim=512, latent_dim=512, task_dim=0, num_q=5, dropout=0.01, simnorm_dim=8, num_bins=101, vmin=-10, vmax=10, wandb_project='moore-tdmpc2', wandb_entity='OA-MBRL', wandb_silent=False, enable_wandb=True, save_csv=True, save_video=False, save_agent=True, compile=True, compile_dynamics=True, compile_loss=True, work_dir=PosixPath('/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/logs/mw-hammer/42/moore-tdmpc2-mt30'), task_title='Mw Hammer', tasks=['mw-hammer'], obs_shape={'state': (39,)}, episode_length=100, obs_shapes='???', episode_lengths='???', seed_steps=1000, bin_size=0.2, data_dir='/media/levi/Singe4linux/Moore-TDMPC/TDMPC2/data/mt30')
Architecture: MooreWorldModel(total_params=5308978, latent_dim=512, action_dim=4, n_experts=4, temperature=0.5)
Task Encoder: MooreTaskEncoder(obs_dim=39, latent_dim=512, hidden_dim=256, n_experts=4, temperature=1.0, use_softmax=True)
Transition-Reward Core: MoETransitionRewardModel(latent_dim=512, action_dim=4, hidden_dim=256, n_experts=4, temperature=0.5, use_softmax=True, reward_dim=101, fused_head=True, use_mixed_precision=True)
Policy prior: Sequential(
  (0): Linear(in_features=512, out_features=256, bias=True)
  (1): ReLU()
  (2): Linear(in_features=256, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=8, bias=True)
)
Q-functions: Ensemble(n_models=5)
[32m[1må¼€å§‹Moore-TDMPC2è®­ç»ƒ...
[32mOnlineTrainer: Starting training loop with profiling enabled
[36mPROFILER STATUS: Enabled=True, Functions=0, Total Calls=0
[36mPROFILER: forward executed in 459.40ms (call 1)
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0] failed while attempting to run meta for aten.repeat.default
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0] Traceback (most recent call last):
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]   File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 2297, in _dispatch_impl
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]     r = func(*args, **kwargs)
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]   File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_ops.py", line 723, in __call__
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]     return self._op(*args, **kwargs)
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]   File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_meta_registrations.py", line 3537, in meta_repeat
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]     torch._check(
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]   File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/__init__.py", line 1617, in _check
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]     _check_with(RuntimeError, cond, message)
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]   File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/__init__.py", line 1599, in _check_with
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0]     raise error_type(message_evaluated)
E0424 11:53:47.258971 2231792 site-packages/torch/_subclasses/fake_tensor.py:2301] [14/0] RuntimeError: Number of dimensions of repeat dims can not be smaller than number of dimensions of tensor
Error executing job with overrides: ['task=mw-hammer']
Traceback (most recent call last):
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_with_cprofile.py", line 192, in train
    trainer.train()
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/utils/profiler.py", line 28, in wrapper
    result = func(*args, **kwargs)
  File "/home/levi/Desktop/MOORE-TDMPC/TDMPC2/algorithms/trainer/online_trainer.py", line 93, in train
    eval_metrics = self.eval()
  File "/home/levi/Desktop/MOORE-TDMPC/moore_tdmpc/train_with_cprofile.py", line 15, in profiled_eval
    result = _original_eval(self, *args, **kwargs)
  File "/home/levi/Desktop/MOORE-TDMPC/TDMPC2/algorithms/trainer/online_trainer.py", line 45, in eval
    action = self.agent.act(obs, t0=t==0, eval_mode=True)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/levi/Desktop/MOORE-TDMPC/TDMPC2/algorithms/tdmpc2.py", line 110, in act
    return self.plan(obs, t0=t0, eval_mode=eval_mode, task=task).cpu()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/eval_frame.py", line 556, in _fn
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/external_utils.py", line 31, in inner
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/levi/Desktop/MOORE-TDMPC/TDMPC2/algorithms/tdmpc2.py", line 168, in _plan
    z = self.model.encode(obs, task)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 1395, in __call__
    return self._torchdynamo_orig_callable(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 1180, in __call__
    result = self._inner_convert(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 545, in __call__
    return _compile(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 977, in _compile
    guarded_code = compile_inner(code, one_graph, hooks, transform)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 706, in compile_inner
    return _compile_inner(code, one_graph, hooks, transform)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_utils_internal.py", line 95, in wrapper_function
    return function(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 741, in _compile_inner
    out_code = transform_code_object(code, transform)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/bytecode_transformation.py", line 1348, in transform_code_object
    transformations(instructions, code_options)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 229, in _fn
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/convert_frame.py", line 658, in transform
    tracer.run()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 2912, in run
    super().run()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1120, in run
    while self.step():
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1032, in step
    self.dispatch_table[inst.opcode](self, inst)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 640, in wrapper
    return inner_fn(self, inst)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 1738, in CALL_FUNCTION
    self.call_function(fn, args, {})
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/symbolic_convert.py", line 967, in call_function
    self.push(fn.call_function(self, args, kwargs))  # type: ignore[arg-type]
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/misc.py", line 1022, in call_function
    return self.obj.call_method(tx, self.name, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/tensor.py", line 589, in call_method
    return wrap_fx_proxy(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/builder.py", line 2108, in wrap_fx_proxy
    return wrap_fx_proxy_cls(target_cls=TensorVariable, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/builder.py", line 2174, in wrap_fx_proxy_cls
    return _wrap_fx_proxy(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/variables/builder.py", line 2270, in _wrap_fx_proxy
    example_value = get_fake_value(proxy.node, tx, allow_non_graph_fake=True)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2278, in get_fake_value
    raise TorchRuntimeError(str(e)).with_traceback(e.__traceback__) from None
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2213, in get_fake_value
    ret_val = wrap_fake_exception(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 1761, in wrap_fake_exception
    return fn()
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2214, in <lambda>
    lambda: run_node(tx.output, node, args, kwargs, nnmodule)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2346, in run_node
    raise RuntimeError(make_error_message(e)).with_traceback(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_dynamo/utils.py", line 2330, in run_node
    return getattr(args[0], node.target)(*args[1:], **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/utils/_stats.py", line 21, in wrapper
    return fn(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1271, in __torch_dispatch__
    return self.dispatch(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1813, in dispatch
    return self._cached_dispatch_impl(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 1372, in _cached_dispatch_impl
    output = self._dispatch_impl(func, types, args, kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_subclasses/fake_tensor.py", line 2297, in _dispatch_impl
    r = func(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_ops.py", line 723, in __call__
    return self._op(*args, **kwargs)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/_meta_registrations.py", line 3537, in meta_repeat
    torch._check(
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/__init__.py", line 1617, in _check
    _check_with(RuntimeError, cond, message)
  File "/home/levi/anaconda3/envs/tdmpc2/lib/python3.9/site-packages/torch/__init__.py", line 1599, in _check_with
    raise error_type(message_evaluated)
torch._dynamo.exc.TorchRuntimeError: Failed running call_method repeat(*(FakeTensor(..., device='cuda:0', size=(1, 1, 512)), 24, 1), **{}):
Number of dimensions of repeat dims can not be smaller than number of dimensions of tensor
from user code:
   File "/home/levi/Desktop/MOORE-TDMPC/TDMPC2/algorithms/tdmpc2.py", line 171, in torch_dynamo_resume_in__plan_at_168
    _z = z.repeat(self.cfg.num_pi_trajs, 1)
Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information
You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.